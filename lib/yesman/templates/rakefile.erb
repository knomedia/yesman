SRC = FileList['src/*.cpp']
SRC.include('src/*.cc')
OBJ = SRC.ext('o');

TESTS = FileList['tests/*.cpp']
TESTS.include('src/*.cpp')
TOBJ = TESTS.ext('o')

namespace "main" do


  desc "Compile main application"
  task :compile => [ "bin/src", :reset, "main"]

  task :show do |t|
    OBJ.each { |o| puts o } 
  end

  task :reset do |t|
    OBJ.gsub!(/src/, "bin/src")
  end

  directory "bin/src"

  file "main" => OBJ do
    sh "g++ -o bin/main #{OBJ}"
  end

  desc "Run main application"
  task :run do |t|
    puts "Running source..."
    sh "clear"
    sh "./bin/main"
  end

  desc "Build & Run main application"
  task :build => [:compile]
  task :build => [:run]
  task :build

end


namespace "tests" do

  desc "Compile all tests"
  task :compile => [ "bin/tests", "bin/src", :reset, "test_runner"]

  task :show do |t|
    TOBJ.each { |o| puts o } 
  end

  task :reset do |t|
    TOBJ.gsub!(/tests/, "bin/tests")
    TOBJ.gsub!(/src/, "bin/src")
  end

  directory "bin/tests"
  directory "bin/src"

  file "test_runner" => TOBJ do
    sh "g++ -o bin/test_runner #{TOBJ} -Itests/gtest/include tests/gtest/libgtest.a"
  end

  desc "Run test suite"
  task :run do |t|
    puts "Running tests..."
    sh "clear"
    sh "./bin/test_runner"
  end

  desc "Build & Run all tests"
  task :build => [:compile]
  task :build => [:run]
  task :build


  rule '.o' => '.cpp' do |t|
    sh "g++ #{t.source} -c -o bin/#{t.name} -Itests/gtest/include"
  end
  

end


rule '.o' => '.cpp' do |t|
  sh "g++ #{t.source} -c -o bin/#{t.name}"
end

rule '.o' => '.cc' do |t|
  sh "g++ #{t.source} -c -o bin/#{t.name}"
end

# File dependancies
# You should look at creating these by loading all files / parsing the #includes
file 'FinalExam.o' =>[ 'RedBlackTreeFactory.h', 'TwoThreeTreeFactory.h' ]
file 'RBNode.o' => [ 'RedBlackNodeInterface.h', 'NColor.h' ]
file 'RBTree.o' => [ 'RBNode.h', 'RBTree.h', 'RedBlackTreeInterface.h', 'RedBlackNodeInterface.h', 'NColor.h', 'NodeBalancer.h' ]
file 'RedBlackTreeFactory.o' => [ 'RedBlackTreeInterface.h', 'RBTree.h' ]
file 'NodeBalancer.o' => ['RBnode.h', 'NColor.h', 'RedBlackNodeInterface.h']
